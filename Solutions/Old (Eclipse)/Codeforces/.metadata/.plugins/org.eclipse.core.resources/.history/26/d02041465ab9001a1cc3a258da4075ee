#include <bits/stdc++.h>
#include <math.h>

using namespace std;

//structures/defines
#define ll long long
#define Yes() cout <<"Yes"<<endl;
#define No() cout <<"No"<<endl;
#define YES() cout <<"YES"<<endl;
#define NO() cout <<"NO"<<endl;
#define pii pair<ll, int>
ll gcd(ll a, ll b) {
    if (b == 0) return a;
    return gcd(b, a % b);
}
ll lcm(ll a, ll b) { return (a*b)/gcd(a, b); }
void primeFactors(ll n) {
    while (n % 2 == 0)  {
    	// 2 is factor
    	n = n/2;
    }
    for (int i = 3; i <= sqrt(n); i = i + 2)  {
        while (n % i == 0)  {
        	// i is factor
            n = n/i;
        }
    }
    if (n > 2)  {
    	// n is factor
    }
}
//global variables
ll n, k, l;
ll t[200005], a[200005], b[200005];
ll ans = 1000000000000;

//functions

bool comp(ll a, ll b) {
	return a > b;
}
bool comp2(ll a, ll b) {
	return a < b;
}
void solve() {

}
void dfs(int i, ll a_, ll b_, ll c) {
	if (c >= ans) return;
	if (a_ >= k && b_ >= k) {
		ans = c; return;
	}
	if (i == n) return;
	dfs(i+1, a_+a[i], b_+b[i], c+t[i]);
	dfs(i+1, a_, b_, c);

}
int main() {
	//local variables

	//input
//	ll t; cin >> t;
//	for (int i=0; i<t; i++) solve();

	//main
	cin >> n >> l >> k;
	vector<ll> c, d;
	vector<pii> v;
	for (int i=0; i<n; i++) {
		cin >> t[i] >> a[i] >> b[i];

		if (a[i] && b[i]) {
			v.push_back(pii(t[i], 1));
		} else if (a[i] && !b[i]) {
			c.push_back(t[i]);
		} else if (!a[i] && b[i]) {
			d.push_back(t[i]);
		}
	}
	sort(c.begin(), c.end());
	sort(d.begin(), d.end());

	ll m = min(c.size(), d.size());
	for (int i=0; i<m; i++) {
		v.push_back(c[i] + d[i]);
	}
	sort(v.begin(), v.end());
	if (v.size() < k) {
		cout <<"-1"<<endl;
		return 0;
	}
	ll sum = 0;
	for (int i=0; i<k; i++) {
		sum += v[i];
	}
	cout << sum << endl;
	return 0;
}
