#include <bits/stdc++.h>
#include <math.h>

using namespace std;

//structures/defines
#define ll long long
#define Yes() cout <<"Yes"<<endl;
#define No() cout <<"No"<<endl;
#define YES() cout <<"YES"<<endl;
#define NO() cout <<"NO"<<endl;
ll gcd(ll a, ll b) {
    if (b == 0) return a;
    return gcd(b, a % b);
}
ll lcm(ll a, ll b) { return (a*b)/gcd(a, b); }
void primeFactors(ll n) {
    while (n % 2 == 0)  {
    	// 2 is factor
    	n = n/2;
    }
    for (int i = 3; i <= sqrt(n); i = i + 2)  {
        while (n % i == 0)  {
        	// i is factor
            n = n/i;
        }
    }
    if (n > 2)  {
    	// n is factor
    }
}
//global variables

//functions

bool comp(ll a, ll b) {
	return a > b;
}
bool comp2(ll a, ll b) {
	return a < b;
}
void solve() {
	int n, k; cin >> n >> k;
	int div1 = n/(k+1);
	int div2 = max(0, div1/9 -1);
	int sum1 = div2*9*(k+1);
	int ans[] = {-1, -1};
	for (int i=0; i<10; i++) {
		for (int j=0; j<10; j++) {
			int sum2 = 0;
			int it = k+1;
			for (int l=j; it>0; l++, it--) {
				if (l==10) l=1;
				sum2 += l + i;
				if (i==6 && j==4) cout << "adding "<<l+i<<endl;
			}
			if (sum2 + sum1 == n) {
//				ans[] = {i, j};
				ans[0]=i, ans[1]=j;
				break;
			}
		}
		if (ans[0]!=-1) break;
	}
//	cout<<sum1<<" | " << ans[0]<<" "<<ans[1]<<endl;
	if (ans[0]==-1) {
		cout <<"-1"<<endl;
	} else {
		if (ans[0]) cout << ans[0];
		for (int i=0; i<div2; i++) cout <<"9";
		cout <<ans[1]<<endl;
	}
}
int main() {
	//local variables

	//input
	int t; cin >> t;
	for (int i=0; i<t; i++) solve();

	//main

	//output

	return 0;
}
