#include <bits/stdc++.h>

using namespace std;
int dist(int x1, int y1, int x2, int y2) {
    return abs(x1-x2) + abs(y1-y2);
}

void solve()
{
    long long int X, Y, startx, starty, N;
    cin >> X >> Y >> startx >> starty >> N;
    pair<pair<int,int>,pair<int,int>> portal[N];
    bool vis[N];

    for (int i = 0; i < N; i ++) {
    	vis[i] = false;
        cin >> portal[i].first.first >> portal[i].first.second >> portal[i].second.first >> portal[i].second.second;
    }
    sort(portal, portal+N);
    long long posx = startx;
    long long posy = starty;
    long long moves = 0;
    while (true) {
        long long min = 1000000000;
        long long port = 0;
        bool used = true;
        for (int i = 0; i < N; i ++) {
            if (!vis[i]) {
                used = false;
                if (dist(posx, posy, portal[i].first.first, portal[i].first.second) < min) {

                    port = i;
                    min = dist(posx, posy, portal[i].first.first, portal[i].first.second);

                }
            }
        }
        if (used) {
            break;
        }
        moves += min;

        vis[port] = true;
        posx = portal[port].second.first;
        posy = portal[port].second.second;

    }
    cout << moves;
}

int main()
{
    int T;
    cin >> T;
    for( int i = 1;  i <= T;  ++i ) {
        cout << endl << "Case #" << i << ": " ;
        solve();
    }
    return 0;
}
